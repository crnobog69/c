#ifndef TOKEN_H
#define TOKEN_H

typedef enum
{
    TOKEN_EOF,
    TOKEN_IDENTIFIER,
    TOKEN_NUMBER,
    TOKEN_PLUS,
    TOKEN_MINUS,
    TOKEN_MULTIPLY,
    TOKEN_DIVIDE,
    TOKEN_ASSIGN,
    TOKEN_SEMICOLON,
    TOKEN_LPAREN,
    TOKEN_RPAREN,
    TOKEN_LBRACE,
    TOKEN_RBRACE,
    TOKEN_COMMA,
    TOKEN_EQUALS,
    TOKEN_STRING,
    TOKEN_PRINT,
    TOKEN_IF,
    TOKEN_ELSE,
    TOKEN_WHILE,
    TOKEN_DEF,
    TOKEN_INT,
    TOKEN_CHAR,
    TOKEN_BOOL,
    TOKEN_TRUE,
    TOKEN_FALSE,
    TOKEN_AND,
    TOKEN_OR,
    TOKEN_NOT,
    TOKEN_QUESTION,
    TOKEN_COLON,
    TOKEN_SCAN,
    TOKEN_READ,
    TOKEN_CHAR_TO_INT,
    TOKEN_INT_TO_CHAR,
    TOKEN_UPPER,
    TOKEN_LOWER,
    TOKEN_IS_DIGIT,
    TOKEN_IS_ALPHA,
    TOKEN_CONCAT,
    TOKEN_LENGTH,
    TOKEN_SUBSTRING,
    TOKEN_SHUFFLE,
    TOKEN_REVERSE,
    TOKEN_PALINDROME,
    TOKEN_FIBONACCI,
    TOKEN_PRIME,
    TOKEN_RANDOM,
    TOKEN_BLOODMERIDIAN,
    TOKEN_KRVAVIMERIDIJAN
} TokenType;

typedef struct
{
    TokenType type;
    char *value;
} Token;

#endif